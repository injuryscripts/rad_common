:ruby
  no_timestamps = false if local_assigns[:no_timestamps].nil?
  force_single_column = false if local_assigns[:force_single_column].nil?
  stats = []

  if !local_assigns[:resource].nil? && !no_timestamps
    if resource.respond_to?(:created_at)
      stats.push(label: 'Created', value: format_datetime(resource.created_at))
    end

    if resource.respond_to?(:updated_at) && resource.updated_at != resource.created_at
      stats.push(label: 'Updated', value: format_datetime(resource.updated_at))
    end
  end

  all_data = []

  data&.each do |item|
    case item
    when Hash
      if item[:value].present?
        all_data.push(item)
      end
    when Symbol
      value = resource.send(item)

      if value.present? || value.class.to_s == 'FalseClass'
        all_data.push(item)
      end
    else
      raise "invalid data type: #{item.class}"
    end
  end

  if all_data.count.zero?
    columns = [stats]
  elsif all_data.count <= 5
    columns = [all_data, stats]
  elsif force_single_column
    columns = [all_data + stats]
  else
    all_data += stats
    columns = all_data.each_slice((all_data.count / 2.to_f).ceil).to_a
  end

.row
  - columns.each do |column|
    %div{ class: force_single_column ? 'col-lg-12' : 'col-lg-6' }
      %dl.dl-horizontal
        - column.each do |item|
          - case item
          - when Hash
            - if item[:label]
              %dt= item[:label]
              %dd= item[:value]
            - else
              %dt= item[:value]
              %dd
          - when Symbol
            :ruby
              value = resource.send(item)
              translation = I18n.t "activerecord.attributes.#{resource.class.to_s.underscore}.#{item}"
            - if translation.include?('translation missing')
              %dt= item.to_s.titlecase
            - else
              %dt= translation
            %dd
              - case value.class.to_s
              - when 'ActiveSupport::TimeWithZone'
                = format_datetime(value)
              - when 'Date'
                = format_date(value)
              - when 'Time'
                = format_time(value)
              - when 'TrueClass', 'FalseClass'
                = format_boolean(value)
              - when 'Array'
                = value.join(', ')
              - else
                = value
